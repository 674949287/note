1.新建一个EventBus.js
   import Vue from 'vue'
   const EventBus = new Vue();

   export default EventBus;

2.在main.js中，将bus对象挂载到vue原型上，公交车对象
   import EventBus from './EventBus'
   Vue.prototype.$bus = EventBus;

3.在created中，用$on去接收这个this.pickNum
      //绑定事件
      this.$bus.$on('sendPickNum',(data)=>{
        this.pickNum += data; //因为购物车会一直增加，用+=
      })

4.用$emit发送sendPickNum对象值
        //触发bus对象绑定的事件
        this.$bus.$emit('sendPickNum',this.pickNum);

vue动画：
   <transition name="ball" @after-enter="afterEnter">
      <div class="ball" v-if="isExist"></div>
    </transition>

    ballHandler() {
        //点击让小球显示
        this.isExist = true;
      },
      afterEnter(){
        // 动画进入之后，小球隐藏
        this.isExist = false;

        //触发bus对象绑定的事件
        this.$bus.$emit('sendPickNum',this.pickNum);
      }

<style scoped>
  .ball-enter-acitve {
    /*给1秒的事件 ，让小球进入动画效果*/
    animation: bounce-in 1s;
  }

  .ball-leave {
    /*元素进入以后，透明度位0，整个动画都是0*/
    /*元素离开默认是1，所以会闪一下，设置位0*/
    opacity: 0;
  }
@keyframes bounce-in {
    0%{
      transform: translate3d(0,0,0);
    }
  50%{
    transform: translate3d(140px,-50px,0);
  }
  75%{
    transform: translate3d(160px,0,0);
  }
  100%{
    transform: translate3d(140px,300px,0);
  }
}
</style>

说明：在进入/离开的过渡中，会有 6 个 class 切换。

v-enter：定义进入过渡的开始状态。在元素被插入之前生效，在元素被插入之后的下一帧移除。

v-enter-active：定义进入过渡生效时的状态。在整个进入过渡的阶段中应用，在元素被插入之前生效，在过渡/动画完成之后移除。这个类可以被用来定义进入过渡的过程时间，延迟和曲线函数。

v-enter-to: 2.1.8版及以上 定义进入过渡的结束状态。在元素被插入之后下一帧生效 (与此同时 v-enter 被移除)，在过渡/动画完成之后移除。

v-leave: 定义离开过渡的开始状态。在离开过渡被触发时立刻生效，下一帧被移除。

v-leave-active：定义离开过渡生效时的状态。在整个离开过渡的阶段中应用，在离开过渡被触发时立刻生效，在过渡/动画完成之后移除。这个类可以被用来定义离开过渡的过程时间，延迟和曲线函数。

v-leave-to: 2.1.8版及以上 定义离开过渡的结束状态。在离开过渡被触发之后下一帧生效 (与此同时 v-leave 被删除)，在过渡/动画完成之后移除。

Transition Diagram

对于这些在过渡中切换的类名来说，如果你使用一个没有名字的 <transition>，则 v- 是这些类名的默认前缀。如果你使用了 <transition name="my-transition">，那么 v-enter 会替换为 my-transition-enter。

v-enter-active 和 v-leave-active 可以控制进入/离开过渡的不同的缓和曲线，在下面章节会有个示例说明。