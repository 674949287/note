1.引入mongodb
npm install mongodb --save-dev
var MongoClient = require('mongodb').MongoClient

2.定义url
这个url需要启动mogodb服务器 mogod --dbpath 路径 ，然后另启一个命令行通过mongo，得到connecting to：
 mongodb://127.0.0.1:27017/+要操作的数据库名称
var DBurl = 'mongodb://localhost:27017/test'

3.连接数据库
MongoClient.connect(url, (err, client) => {

})

4.实现增删改查
//node增加数据库数据 insertOne
    MongoClient.connect( url, {useUnifiedTopology: true }, (err, client) => {	//client可以理解为数据库客户端	
        if (err) {
            console.log(err)
            console.log("数据库连接失败")
            return
        }
        //连接成功，开始增加数据
        const db = client.db('itying')	//需要在锁定到这个itying的数据库
        db.collection('user').insertOne({
            "name": "nodejs-1",
            "age": 11
        }, (error, result) => {
            if (error) {
                console.log("增加数据失败", error)
                return
            }
            res.send('增加数据成功',result)
            client.close()  // 关闭数据库
        })
    })

//node增加数据库数据 updateOne
    MongoClient.connect(url, { useUnifiedTopology: true }, (err, client) => {
        if (err) {
            console.log("数据库连接失败",err)
            return
        }
        const db = client.db('itying')
        db.collection('user').updateOne({"name": "何健"},{$set: {
            "age": 40
        }}, (error, data) => {
            if (error) {
                console.log("修改数据失败",error)
            }
            console.log(data)
            res.send("修改数据成功")
        })
    })

//node删除数据库数据
    //http://localhost:3000/delete?name=何健 通过url后面传入的name值来删除数据
    const query = url.parse(req.url, true).query    //拿到url的query { name: '何健' }
    const name = query.name
    //连接数据库
    MongoClient.connect(DBurl, { useUnifiedTopology: true }, (err, client) => {
        if (err) {
            console.log("数据库连接出错", err)
            return
        }
        const db = client.db("itying")
        db.collection('user').deleteOne({"name": name}, (error, data) => {
            if (error) {
                console.log("删除数据出错", error)
            }
            console.log(data)
            if (!data.deletedCount) {
                res.send("数据库中未有此数据")
                client.close()
            }
            res.send("删除成功")
            client.close()
        })
    })