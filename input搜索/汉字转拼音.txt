汉语到拼音的转换——适用于搜索或者城市的锚点定位，需要把汉语城市处理成拼音截取第一个小写字母的charCodeAt，然后分别归类的push到对应字母的数组中
安装js-pinyin插件：
  npm i js-pinyin
使用：

<template>
    <div>
      <dl class="m-category">
        <dt>按拼音首字母选择</dt>
        <dd v-for="(item, index) in list" :key="item">
          <a :href="'#city-'+item">{{ item }}</a>
        </dd>
      </dl>
      <dl class="m-category-section" v-for="(item, index) in block" :key="item.title">
        <dt :id="'city-'+item.title">{{item.title}}</dt>
        <dd>
          <span v-for="c in item.city" :key="c">{{c}}</span>
        </dd>
      </dl>
    </div>
</template>

<script>
    import pyjs from 'js-pinyin'
    export default {
        name: "category",
      data () {
          return {
            list: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''),
            block: [
              {
                title: '',
                city: ''
              }
            ]
          }
      },
      async mounted() {
        let blocks = []
        let {status, data: {city}} = await this.$axios.get('http://cp-tools.cn/geo/city')
        if (status === 200) {
          let p, c
          let d = {}
          city.forEach(item => {
            p = pyjs.getFullChars(item.name).toLocaleLowerCase().slice(0, 1)

            c = p.charCodeAt(0) // 拿到首字母小写的值，例a=97

            if (c > 96 && c < 123) { // 根据城市首字母归类A字母开头的城市防在A中
              if (!d[p]) {
                d[p] = []
              }
              d[p].push(item.name)
            }
          })
          for (let [k, v] of Object.entries(d)) { // 遍历把d中的key：value数据copy到想要的格式的空数组中
            blocks.push({
              title: k.toUpperCase(),
              city: v
            })
          }

          blocks.sort((a, b) => a.title.charCodeAt(0) - b.title.charCodeAt(0)) // 首字母排序
          this.block = blocks
        }
      }
    }
</script>

<style lang="scss" scoped>
  @import "@/assets/css/changecity/category.scss";
</style>

