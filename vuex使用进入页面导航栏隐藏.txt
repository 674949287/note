安装Vuex
执行：npm install vuex --save
Vuex中核心概念：State、Getter、Mutation、Action、Module

1.在src目录下新建一个store.js
	import Vue from 'vue'
	import moduleA from './store/moduleA/index'
	// 导入Vuex
	import Vuex from 'vuex'
	// //注入

	// Vue.use(Vuex);

	export default new Vuex.Store({
	  //五大将
	  modules:{
	    a:moduleA
	  }
	})

2.将store实例挂载到main.js
	import store from './store'
	new Vue({
	  store,
	  el: '#app',
	  router,
	  components: { App },
	  template: '<App/>'
	})

3.在src目录下新建一个store文件夹
   store下新建moduleA
	在moduleA中新建五大将和index入口（index.js、state.js、getters.js、actions.js、mutations.js）

4.index.js中把五大将挂载到index中
	import Vue from 'vue';
	import Vuex from 'vuex';
	import state from './state';
	import getters from './getters'
	import mutations from './mutations'
	import actions from './actions'

	Vue.use(Vuex);

	export default {
	  state,
	  getters,
	  mutations,
	  actions
	}

5.数据修改通过 $store.dispatch来向muatations请求修改数据
	export default {
	  showHeader(state){
	    state.header = true;
	  },
	  hideHeader(state){
	    state.header = false;
	  }
	}

6.然后到mutations中修改数据在返回给actions去提交给state
	export default {
	  showHeader({commit}){
	      commit('showHeader');
	  },
	  hideHeader({commit}){
	    commit('hideHeader');
	  },
	}
7.通过getters来获取修改好的state中的值
	export default {
	  showHeader(state){
	    return state.header
	  }
	}

8.页面中使用需要在computed中，声明一个带有返回值的函数，返回值通过$store.getters中更新过state值的函数
      showHeader(){
        return this.$store.getters.showHeader;
      }

<NavHeader v-show="showHeader"></NavHeader>	//进入我的页面时，头部导航栏隐藏的Vuex使用
