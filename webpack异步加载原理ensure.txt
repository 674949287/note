原理：把一些js模块给独立出一个个js文件，然后需要用到的时候，在去创建一个script对象，加入到document，head对象中即可，减少性能消耗
1.在index.html中通过2个按钮点击实现，创建一个script对象加入到dom中
2.按钮对应增加A.js,B.js,通过main.js得异步加载实现
具体：
import  Vue from 'vue'
document.getElementById('aBtn').onclick = function () {
    //异步加载A.js
    require.ensure([],function(){
        var A = require('./A.js');
        alert(A.data);
    });
};
document.getElementById('bBtn').onclick = function () {
    //异步加载B.js
    require.ensure([],function(){
        var B = require('./B.js');
        alert(B.data);
    });
};
3.在webpack.dev.config.js中配置对应plugins：
    plugins: [
        //插件
        new webpack.optimize.CommonsChunkPlugin({
            name:"common",
            filename:"[name].js"
        }),
        new HtmlWebpackPlugin({
            //chunks主要用于多入口文件，当你有多个入口文件得时候，它就会编译生成多个打包后得文件，chunks就能选择你要使用哪些js文件
            chunks:['common','util','main'],
            template: './src/index.html',     //参照物
            inject:true
        })
    ],